class Entity {
	x {
		get => this.position.x
		set => this.position.x = value
	}
	
	y {
		get => this.position.y
		set => this.position.y = value
	}

	centerX {
		get => this.position.x + this.width * 0.5
		set => this.position.x = value - this.width * 0.5
	}
	
	centerY {
		get => this.position.y + this.height * 0.5
		set => this.position.y = value - this.height * 0.5
	}

	center {
		get => new Vector(this.centerX, this.centerY)
		set => {
			this.centerX = v.x
			this.centerY = v.y
		}
	}

	right {
		get => this.position.x + this.width
		set => this.position.x = value - this.width
	}
	
	bottom {
		get => this.position.y + this.height
		set => this.position.y = value - this.height
	}
	
	constructor() {
		this.components = []
		this.tags = new Map()
		this.done = false

		this.position = new Vector()
		this.width = 16
		this.height = 16

		this.active = true
		this.visible = true
		this.alwaysActive = false
		this.alwaysVisible = false
	}

	addComponents() {

	}

	init() {
		
	}

	destroy() {
		for (var component in this.components) {
			component.destroy()
		}
	}

	update(dt) {
		for (var component in this.components) {
			component.update(dt)
		}
	}

	render() {
		this.graphicsComponent?.render()
	}

	addComponent(component) {
		this[component.id] = component
		this.components.add(component)

		if (component is GraphicsComponent) {
			this.graphicsComponent = component
		}

		component.entity = this
		component.init()
	}

	removeComponent(component) {
		this.components[component.id] = null
		this.components.remove(component)

		if (component == this.graphicsComponent) {
			this.graphicsComponent = null
		}
	}

	handleEvent(e) {
		for (var component in this.components) {
			if (component.handleEvent(e)) {
				e.handled = true
			}
		}

		if (!e.wasInHandler) {
			e.wasInHandler = true

			if (this.area.eventHandler.handleEvent(e)) {
				e.handled = true
			}
		}

		return e.handled
	}

	hasTag(tag) {
		return this.tags[tag]
	}

	addTag(...) {
		for (var t in ...) {
			this.tags[t] = true
		}
	}

	removeTag(...) {
		for (var t in ...) {
			this.tags[t] = null
		}
	}
}