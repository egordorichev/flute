class Player : Entity {
	addComponents() {
		this.addComponent(new StateComponent())
		this.addComponent(new AnimationComponent("test/assets/test.ase"))
		this.addComponent(new PlayerInputComponent())

		this.alwaysActive = true
	}
}

class PlayerInputComponent : Component {
	constructor() {
		super("input")
	}

	update(dt) {
		const s = dt * 50
		var dx = 0
		var dy = 0

		if (Input.isDown("left")) {
			dx = -s
		}
		
		if (Input.isDown("right")) {
			dx += s
		}
		
		if (Input.isDown("up")) {
			dy = -s
		}
		
		if (Input.isDown("down")) {
			dy += s
		}

		if (dx != 0 || dy != 0) {
			this.entity.position += new Vector(dx, dy)
			this.entity.state.current = "run"

			if (dx != 0) {
				this.entity.graphics.flipped = dx < 0
			}
		} else {
			this.entity.state.current = "idle"
		}

		this.entity.graphics.angle += ((dx != 0 ? -30 : 0) - this.entity.graphics.angle) * dt * 10
	}
}